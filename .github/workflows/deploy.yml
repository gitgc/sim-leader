name: Deploy

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed
    branches: [ main ]

jobs:
  docker-build-and-publish:
    runs-on: ubuntu-latest
    # Only run when the CI workflow completed successfully
    if: |
      github.event_name == 'push' || 
      (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Get next version
      id: version
      uses: reecetech/version-increment@2024.4.4
      with:
        scheme: semver
        increment: patch

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'

    - name: Update package.json version
      run: |
        npm version ${{ steps.version.outputs.version }} --no-git-tag-version
        echo "Updated package.json to version ${{ steps.version.outputs.version }}"

    - name: Commit version update
      run: |
        git add package.json
        # Add package-lock.json if it exists and was modified
        if [ -f package-lock.json ]; then
          git add package-lock.json
        fi
        git commit -m "chore: bump version to v${{ steps.version.outputs.version }}"
        git push origin main

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=v${{ steps.version.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64

    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.version.outputs.version }}
        release_name: Release v${{ steps.version.outputs.version }}
        body: |
          ðŸš€ **Automated Release v${{ steps.version.outputs.version }}**
          
          **Docker Images:**
          - `ghcr.io/${{ github.repository }}:latest`
          - `ghcr.io/${{ github.repository }}:v${{ steps.version.outputs.version }}`
          
          **Changes in this release:**
          - Built from commit: ${{ github.sha }}
          - Previous version: v${{ steps.version.outputs.current-version }}
          - Version increment: patch (+0.0.1)
          
          **Docker Pull Commands:**
          ```bash
          # Latest version
          docker pull ghcr.io/${{ github.repository }}:latest
          
          # Specific version
          docker pull ghcr.io/${{ github.repository }}:v${{ steps.version.outputs.version }}
          ```
          
          **Docker Run Command:**
          ```bash
          docker run -p 3001:3001 --env-file .env ghcr.io/${{ github.repository }}:v${{ steps.version.outputs.version }}
          ```
        draft: false
        prerelease: false
