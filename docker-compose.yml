# Reusable configuration blocks
x-healthcheck-defaults: &healthcheck-defaults
  interval: 30s
  timeout: 10s
  retries: 3

services:
  db:
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    restart: unless-stopped
    healthcheck:
      <<: *healthcheck-defaults
      test: [CMD-SHELL, "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
    networks:
      - app-network

  app:
    build: .
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PORT=${PORT}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - GOOGLE_CALLBACK_URL=${GOOGLE_CALLBACK_URL}
      - SESSION_SECRET=${SESSION_SECRET}
      - AUTHORIZED_EMAILS=${AUTHORIZED_EMAILS}
    volumes:
      - ./public/uploads:/usr/src/app/public/uploads
      - caddy_uploads:/var/www/html/uploads
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      <<: *healthcheck-defaults
      test: [CMD-SHELL, "curl -f http://localhost:${PORT}/ || exit 1"]
    networks:
      - app-network

  caddy:
    image: caddy:2-alpine
    ports:
      - 80:80
      - 443:443
    environment:
      - DOMAIN=${DOMAIN:-localhost}
      - CADDY_EMAIL=${CADDY_EMAIL}
      - DIGITALOCEAN_API_TOKEN=${DIGITALOCEAN_API_TOKEN}
      - CADDY_HTTPS_MODE=${CADDY_HTTPS_MODE:-auto_https on}
      - CADDY_SITE_ADDRESS=${CADDY_SITE_ADDRESS}
      - CADDY_ACME_CONFIG=${CADDY_ACME_CONFIG}
      - CADDY_HSTS_HEADER=${CADDY_HSTS_HEADER}
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - ./public/uploads:/var/www/html/uploads:ro
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/var/log/caddy
    depends_on:
      app:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network

volumes:
  db_data:
  caddy_data:
  caddy_config:
  caddy_logs:
  caddy_uploads:

networks:
  app-network:
    driver: bridge
